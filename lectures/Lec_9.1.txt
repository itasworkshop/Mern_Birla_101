Working with Mongoose:-

1) install mongoose module 
npm install mongoose

2) create schema
var mongoose = require('mongoose');

//db.students.insertMany([{rollno: "101", name:"Raju", subject: "Maths"}, {rollno: "102", name : "Rajesh", subject : "computer science"}])

var StudentSchema = new mongoose.Schema({
    id: String,
    name: String,
    subject: String,
});


module.exports = mongoose.model('Student', StudentSchema);

3) Mongoose configuration in app.js
//Set up mongoose connection
var mongoose = require('mongoose');
var mongoDB = 'mongodb://127.0.0.1/test';
mongoose.connect(mongoDB);
mongoose.Promise = global.Promise;
var db = mongoose.connection;
db.on('error', console.error.bind(console, 'MongoDB connection error:'));

4) Get Request

//http://localhost:3000/students
app.get('/students', (req, res, next) => {
  Student.find(function(err,students) {
    if(err) return next(err);
    res.json(students)
  })
})

//http://localhost:3000/students/62f24142ed03d885bd9d2c00
app.get('/students/:id', (req, res, next) => {
  Student.findById(req.params.id, function(err,students) {
    if(err) return next(err);
    res.json(students)
  })
})


POST Request
1) Make sure you have configured express for using json
app.use(express.json());

2) Send request from postman in body as json type

{"rollno": 103,"name": "Ricky","subject": "Science"}

//http://localhost:3000/student
app.post('/student', (req, res, next) => {
  Student.create(req.body, function(err,student) {
    if(err) return next(err);
    res.json(student)
  })
})

Note:-
for avoiding version field in mongodb
var StudentSchema = new mongoose.Schema({
    rollno: Number,
    name: String,
    subject: String,
}, {
  versionKey: false // You should be aware of the outcome after set to false
});


PUT Request
//http://localhost:3000/students/101
app.put('/students/:rollno', (req, res, next) => {
  Student.findOneAndUpdate({ rollno: req.params.rollno},
      req.body, function(err,student) {
    if(err) return next(err);
    res.json(student)
  })
})

DELETE Request
//http://localhost:3000/students/101
app.delete('/students/:rollno', (req, res, next) => {
  Student.findOneAndDelete({ rollno: req.params.rollno},
      req, function(err,student) {
    if(err) return next(err);
    res.json(student)
  })
})
